<?php

/**
 * @file
 * Allows accepting Liberty Reserve Payments through ubercart
 *
 * This module allows accepting Liberty Reserve payments on Drupal websites
 * that use the UberCart module
 */

/**
 * Implementation of hook_menu().
 */
function uc_libertyreserve_menu() {
  // Callback functions for Website Payments.
  // Return page after payment completed
  $items['uc_libertyreserve/wp/completed'] = array(
    'title' => 'Liberty Reserve payment completed',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uc_libertyreserve_payment_completed'),
    'access callback' => 'uc_libertyreserve_access',
    'type' => MENU_CALLBACK,
    'file' => 'uc_libertyreserve.inc',
  );
  // Return page after payment cancelled
  $items['uc_libertyreserve/wp/cancel'] = array(
    'title' => 'Liberty Reserve payment cancelled',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uc_libertyreserve_payment_cancelled'),
    'access callback' => 'uc_libertyreserve_access',
    'type' => MENU_CALLBACK,
    'file' => 'uc_libertyreserve.inc',
  );
  // Page to accept the notification from libertyreserve
  $items['uc_libertyreserve/wp/notification'] = array(
    'title' => 'Liberty Reserve payment notification',
    'page callback' => 'uc_libertyreserve_notification',
    'access callback' => 'uc_libertyreserve_access',
    'type' => MENU_CALLBACK,
    'file' => 'uc_libertyreserve.inc',
  );

  return $items;
}

/**
 * Implementation of hook_access().
 */
function uc_libertyreserve_access() {
  return TRUE;
}

/**
 * Implementation of hook_form_alter().
 */
function uc_libertyreserve_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'uc_cart_checkout_review_form' && ($order_id = intval($_SESSION['cart_order'])) > 0) {
    $order = uc_order_load($order_id);

    if ($order->payment_method == 'libertyreserve') {
      // drupal_add_css(drupal_get_path('module', 'uc_libertyreserve') .'/uc_libertyreserve.css');
      hide($form['actions']['submit']);

      $form['#prefix'] = '<table id="libertyreserve-review-table"><tr><td>';
      $form['#suffix'] = '</td><td>'. render(drupal_get_form('uc_libertyreserve_form', $order)) .'</td></tr></table>';
    }
  }
}

/**
 * Form to build the submission to 2Checkout.com.
 */
function uc_libertyreserve_form($form, &$form_state, $order) {
//  $context = array(
//    'revision' => 'formatted-original',
//    'type' => 'order_total',
//    'subject' => array(
//      'order' => $order,
//    ),
//  );
//  $options = array(
//    'sign' => FALSE,
//    'dec' => '.',
//    'thou' => FALSE,
//  );
//  dpm($order);
  $data = array(
    'lr_acc' => variable_get('uc_libertyreserve_account_number', ''),
    'lr_store' => variable_get('uc_libertyreserve_store', ''),
//    'lr_amnt' => uc_price($order->order_total, $context, $options),
    'lr_amnt' => $order->order_total,
    'lr_currency' => 'LR' . drupal_strtoupper(variable_get('uc_currency_code', 'USD')),   // ! only USD and EUR are available
    'lr_success_url' => url('uc_libertyreserve/wp/completed', array('absolute' => TRUE)),
    'lr_success_url_method' => 'POST',
    'lr_fail_url' => url('uc_libertyreserve/wp/cancel', array('absolute' => TRUE)),
    'lr_fail_url_method' => 'LINK',
    'lr_status_url' => url('uc_libertyreserve/wp/notification', array('absolute' => TRUE)),
    'lr_status_url_method' => 'POST',
    'order_id' => $order->order_id,
  );


//  Ì§$i = 0;

//  $context['type'] = 'order_product';

  $form['#action'] = 'https://sci.libertyreserve.com';

  reset($data);

  foreach ($data as $name => $value) {
    $form[$name] = array('#type' => 'hidden', '#value' => $value);
  }

  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit Order'),
  );

  return $form;
}


/**
 * Implementation of hook_uc_payment_method().
 */
function uc_libertyreserve_uc_payment_method() {
  $path = base_path() . drupal_get_path('module', 'uc_libertyreserve');

  $methods[] = array(
    'id' => 'libertyreserve',
    'name' => t('Liberty Reserve'),
    'title' => t('Liberty Reserve - pay without sharing your financial information.'),
    'review' => t('Liberty Reserve'),
    'desc' => t('Redirect to Liberty Reserve to pay with all options of a libertyreserve.'),
    'callback' => 'uc_payment_method_libertyreserve',
    'weight' => 0,
    'checkout' => TRUE,
    'no_gateway' => TRUE,
  );

  return $methods;
}

function uc_payment_method_libertyreserve($op, &$arg1) {
  switch ($op) {

/**
 * Prepare the setup form for the payment method libertyreserve
 */
    case 'settings':
      $form['uc_libertyreserve_account_number'] = array(
        '#type' => 'textfield',
        '#title' => t('Liberty Reserve account number'),
        '#description' => t('Your Liberty Reserve account number (ex: U7654321).'),
        '#default_value' => variable_get('uc_libertyreserve_account_number', ''),
        '#size' => 16,
      );
      $form['uc_libertyreserve_store'] = array(
        '#type' => 'textfield',
        '#title' => t('Liberty Reserve store'),
        '#description' => t('The store you intend to use for accepting payments, although it\'s optional, you must setup one in order for the uc_libertyreserve module to be fully functional.'),
        '#default_value' => variable_get('uc_libertyreserve_store', ''),
        '#size' => 16,
      );
      $form['uc_libertyreserve_security_word'] = array(
        '#type' => 'password',
        '#title' => t('Secret word'),
        '#description' => t('The secret word entered in the Liberty Reserve store details.'),
        '#default_value' => variable_get('uc_libertyreserve_security_word', ''),
        '#size' => 16,
      );
      $form['uc_libertyreserve_hr'] = array(
        '#value' => '<hr/>',
        '#prefix' => '<div class="libertyreserve_hr">',
        '#suffix' => '</div>',
      );
      $form['uc_libertyreserve_infotext'] = array(
        '#value' => '<strong>' . t('Support:') . '</strong><br/>' . t('Report bugs at <a href="http://drupal.org/project/issues/uc_libertyreserve">drupal.org</a><br /><a href="http://www.kadimi.com/en/hire-me">Hire me</a> for PHP, Drupal or Ubercart work.'),
        '#prefix' => '<div class="libertyreserve_infotext">',
        '#suffix' => '</div>',
      );

      return $form;
  }
}
